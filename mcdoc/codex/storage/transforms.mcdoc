use ::java::util::text::Text
use ::java::util::text::TextStyle
use ::java::world::item::ItemStack
use super::DescriptionKey
use super::super::custom_data::BakedEntry
use super::archive::ArchiveEntry
use super::archive::Insertion
use super::archive::BulletType
use super::book_data::BookData

// item stack → translated item name
// extra input: @s = 24b09cde-0-0-0-2
dispatch codex:transforms_in[codex:item_name] to ItemStack
dispatch codex:transforms_out[codex:item_name] to Text
dispatch codex:transforms_temp[codex:item_name] to struct {
  resolved_text?: Text,
}

// item name → common lore containing item name
dispatch codex:transforms_in[codex:active_book_lore] to Text
dispatch codex:transforms_out[codex:active_book_lore] to [Text]

// archive entry IDs → page object
dispatch codex:transforms_in[codex:bake_book_contents] to [DescriptionKey]
dispatch codex:transforms_out[codex:bake_book_contents] to BookData

// single entry ID → lore and button item
dispatch codex:transforms_in[codex:bake_single_entry] to DescriptionKey
dispatch codex:transforms_out[codex:bake_single_entry] to BakedEntry
dispatch codex:transforms_temp[codex:bake_single_entry] to struct {
  /// Other keywords related to the main description
  related_keywords?: [DescriptionKey],
  related_keywords_stack?: [[DescriptionKey]],
  /// Archive entry retrieved from `codex:archives`
  retrieved_archive?: ArchiveEntry,
  /// Transformed `with` text components
  with?: [Text],
}

// text & style → styled text component
dispatch codex:transforms_in[codex:format_text] to struct {
  /// Text content
  content?: Text,
  /// Text style
  style?: TextStyle,
}
dispatch codex:transforms_out[codex:format_text] to Text

// text & style & bullet ID → styled text component
dispatch codex:transforms_in[codex:format_text_with_bullet] to struct {
  /// Text content
  content?: Text,
  /// Bullet type
  bullet_type?: BulletType,
  /// Text style
  style?: TextStyle,
}
dispatch codex:transforms_out[codex:format_text_with_bullet] to Text
dispatch codex:transforms_temp[codex:format_text_with_bullet] to struct {
  /// Mapped bullet value
  bullet_text?: Text,
}

// archive insertion → standard text component
// extra input: context related scores
dispatch codex:transforms_in[codex:insertion] to Insertion
dispatch codex:transforms_out[codex:insertion] to Text
dispatch codex:transforms_temp[codex:insertion] to struct {
  /// Typed input
  lookup_insertion?: codex:insertion[lookup],
  /// Typed input
  value_check_insertion?: codex:insertion[value_check],
  /// Temp storage of unformatted result text
  picked_text?: Text,
}
